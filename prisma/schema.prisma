// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// encrypt user's personal data: email, phone, name, password
model User {
  id         String   @id @unique @default(uuid())
  name       String
  email      String
  phone      String?
  subs       Sub[]
  username   String   @unique
  password   String
  googleSub  String?
  active     Boolean  @default(true)
  admin      Boolean  @default(false)
  clientList Client[]
}

model Error {
  id      String  @id @unique @default(uuid())
  name    String
  message String
  status  Int?
  userId  String?
}

model Item {
  id           String         @id @unique @default(uuid())
  name         String
  path         String
  type         String
  subType      String
  ClientChoice ClientChoice[]
}

model Pattern {
  id            String         @id @unique @default(uuid())
  name          String         @unique
  clientChoices ClientChoice[]
}

model Color {
  id            String         @id @unique @default(uuid())
  name          String         @unique
  code          String
  rgb           String
  hex           String
  clientChoices ClientChoice[]
}

model Sub {
  id        String    @id @unique @default(uuid())
  startDate DateTime?
  endDate   DateTime?
  status    String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
}

// encrypt sensitive info, name, email, phone, pass
model Client {
  id      String         @id @unique @default(uuid())
  name    String
  email   String
  phone   String
  choices ClientChoice[]
  userId  String
  User    User           @relation(fields: [userId], references: [id])
}

model ClientChoice {
  id        String   @id @unique @default(uuid())
  client    Client   @relation(fields: [clientId], references: [id])
  item      Item     @relation(fields: [itemId], references: [id])
  color     Color    @relation(fields: [colorId], references: [id])
  pattern   Pattern? @relation(fields: [patternId], references: [id])
  clientId  String
  itemId    String
  colorId   String
  patternId String?
}
