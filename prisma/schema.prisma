// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// encrypt user's personal data
model User {
  id         String    @id @default(uuid())
  name       String
  email      String
  phone      String?
  subs       Sub[]
  userCred   UserCred?
  userCredId String?
}

// encrypt sensitive info, user and pass are secondary login sources
// google sub is preferred method of checking auth
model UserCred {
  id        String  @id @default(uuid())
  username  String
  password  String
  googleSub String?
  admin     Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
}

model Item {
  id            String         @id @default(uuid())
  name          String
  url           String
  type          String
  subType       String
  clientChoices ClientChoice[]
}

model Pattern {
  id            String         @id @default(uuid())
  name          String         @unique
  clientChoices ClientChoice[]
}

model Color {
  id            String         @id @default(uuid())
  name          String         @unique
  code          String
  rgb           Int[]
  clientChoices ClientChoice[]
}

model Sub {
  id        String   @id @default(uuid())
  startDate DateTime
  endDate   DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

//encrypt personal info
model Client {
  id           String         @id @default(uuid())
  name         String
  email        String
  phone        String
  savedConfigs ClientChoice[]
}

model ClientChoice {
  id        String   @id @default(uuid())
  client    Client   @relation(fields: [clientId], references: [id])
  item      Item     @relation(fields: [itemId], references: [id])
  color     Color    @relation(fields: [colorId], references: [id])
  pattern   Pattern? @relation(fields: [patternId], references: [id])
  clientId  String
  itemId    String
  colorId   String
  patternId String?
}
